# --- File: docker/Dockerfile.api ---
# Stage 1: Builder stage to compile and install dependencies
FROM python:3.9-slim as builder

WORKDIR /install

# Install system build tools
RUN apt-get update && apt-get install -y --no-install-recommends build-essential && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy and install Python requirements into a separate prefix
COPY ../requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --prefix=/install -r requirements.txt

# Stage 2: Final production image
FROM python:3.9-slim

# Create a non-root user and group for running the application
RUN groupadd -r apiuser && useradd --no-log-init -r -g apiuser apiuser

WORKDIR /app

# Copy installed packages from the builder stage
COPY --from=builder /install /usr/local

# Copy application source code
COPY ./api/ /app/api/
COPY ./src/ /app/src/

# Set correct ownership for the app directory
RUN chown -R apiuser:apiuser /app

# Switch to the non-root user
USER apiuser

# Expose the port the app runs on
EXPOSE 8080

# Run the application with Gunicorn, a production-ready WSGI server
CMD ["gunicorn", "--bind", "0.0.0.0:8080", "--workers", "4", "api.recommender_api:app"]