# --- File: docker/Dockerfile.airflow (Corrected Version - PLEASE USE THIS) ---
FROM python:3.9-slim

# Set environment variables for Airflow
ENV AIRFLOW_HOME=/opt/airflow
ENV PYTHONUNBUFFERED=1

# Define Airflow version for reproducibility
ARG AIRFLOW_VERSION=2.8.1
ARG CONSTRAINT_URL="https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-3.9.txt"

# Create a non-root user for better security
RUN groupadd -r airflow && useradd -r -g airflow -d ${AIRFLOW_HOME} -s /bin/bash airflow

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential libpq-dev freetds-dev libssl-dev libsasl2-dev curl netcat \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy requirements file first to leverage Docker's build cache
COPY ../requirements.txt /requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir apache-airflow==${AIRFLOW_VERSION} --constraint "${CONSTRAINT_URL}" && \
    pip install --no-cache-dir -r /requirements.txt

# --- CORRECTED SECTION ---
# Explicitly copy only the necessary directories to their final destinations.
# This is cleaner, more efficient, and fixes the "No such file or directory" error.
COPY ../src ${AIRFLOW_HOME}/src
COPY ../airflow/dags ${AIRFLOW_HOME}/dags

# Create empty logs/plugins dirs and set permissions for the entire AIRFLOW_HOME
RUN mkdir -p ${AIRFLOW_HOME}/logs ${AIRFLOW_HOME}/plugins && \
    chown -R airflow:airflow ${AIRFLOW_HOME}
# --- END CORRECTED SECTION ---

# Set the working directory
WORKDIR ${AIRFLOW_HOME}

# Expose the Airflow webserver port
EXPOSE 8080

# Switch to the non-root user
USER airflow

# This CMD is a fallback; the actual command is specified in docker-compose.yml
CMD ["bash", "-c", "airflow db init && airflow standalone"]

# Add a healthcheck to verify the webserver is responsive
HEALTHCHECK --interval=30s --timeout=30s --start-period=30s --retries=3 \
  CMD [ "curl", "--fail", "http://localhost:8080/health" ]